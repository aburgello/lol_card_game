<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Swiper/11.0.5/swiper-bundle.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/Swiper/11.0.5/swiper-bundle.min.js"></script>

<div class="lg:max-w-screen-2xl lg:mx-32 2xl:mx-auto mb-12 rounded-lg">
  <div id="skins-container">
    <div class="grid grid-cols-1">
      <div class="flex flex-col items-center relative mx-4 ">
        <div class="p-4 mx-auto bg-gradient-to-r from-[#0A1428]/20 to-[#0A0C14]/20 pt-4 rounded-lg shadow-md border border-slate-900 w-full">
          <h3 class="text-3xl font-semibold mb-6 text-center text-[#C8AA6E] border-b pb-4 mx-6 border-[#C8AA6E]/20 cursor-default">Your Skins</h3>
          
          <div class="flex justify-center">
            <input type="text" id="searchBox" placeholder="Search skins..." class="bg-[#0A1428] text-[#C8AA6E] border-2 border-[#C8AA6E] rounded-lg px-4 py-2 mx-4 w-full mb-4" data-url="<%= request.original_url %>" />
          </div>



          <!-- Add a separate container for just the grid -->
          <div id="skins-grid-container">
            <%= render partial: 'collections/skins_grid', locals: { user_skins: @user_skins } %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Initialize Swiper -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  // Initialize Swiper (keeping existing swiper initialization)
  initializeSwipers();

  // Add real-time search functionality
  const searchBox = document.getElementById('searchBox');
  let debounceTimeout;

  searchBox.addEventListener('input', function(e) {
    clearTimeout(debounceTimeout);

    debounceTimeout = setTimeout(() => {
      const searchTerm = e.target.value.trim();
      const url = new URL(searchBox.dataset.url);
      
      // Add search parameter
      url.searchParams.set('search', searchTerm);
      
      // Get current filter values
      const championSelect = document.querySelector('select[name="champion"]');
      const regionSelect = document.querySelector('select[name="region"]');
      
      if (championSelect && championSelect.value) {
        url.searchParams.set('champion', championSelect.value);
      }
      
      if (regionSelect && regionSelect.value) {
        url.searchParams.set('region', regionSelect.value);
      }

      // Make the AJAX request
      fetch(url, {
        headers: {
          'Accept': 'text/javascript',
          'X-Requested-With': 'XMLHttpRequest'
        },
        credentials: 'same-origin'
      })
      .then(response => response.text())
      .then(html => {
        // Update only the grid container
        const gridContainer = document.querySelector('#skins-grid-container');
        if (gridContainer) {
          gridContainer.innerHTML = html;
          // Reinitialize Swiper for the new content
          initializeSwipers();
        }
      })
      .catch(error => {
        console.error('Error updating skins grid:', error);
      });
    }, 300);
  });
});

// Separate function for initializing Swipers
// Separate function for initializing Swipers
function initializeSwipers() {
  const swiperElements = document.querySelectorAll('.swiper');
  swiperElements.forEach(swiperElement => {
    new Swiper(swiperElement, {
      slidesPerView: 'auto',
      spaceBetween: 20,
      grid: {
        rows: 2,
        fill: 'row'
      },
      autoHeight: true,
      navigation: {
        nextEl: swiperElement.querySelector('.swiper-button-next'),
        prevEl: swiperElement.querySelector('.swiper-button-prev'),
      },
      pagination: {
        clickable: true,
      },
      breakpoints: {
        640: {
          slidesPerView: 3,
          spaceBetween: 20,
          grid: {
            rows: 2,
            fill: 'row'
          }
        },
        1500: {
          slidesPerView: 3,
          spaceBetween: 20,
          grid: {
            rows: 3,
            fill: 'row'
          }
        },
      },
    });
  });
}
</script>
<style>
.swiper {
  padding: 20px;
  width: 100%;
}

.swiper-slide {
  background: #0A0C14;
  border-radius: 12px;
  transition: transform 0.3s ease-in-out;
  box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.5);
  height: calc((100% - 20px) / 2) !important; /* Adjust height for 2 rows */
}

.swiper-wrapper {
  height: auto !important;
}

/* Grid specific styles */
.swiper-grid-column > .swiper-wrapper {
  flex-wrap: wrap;
}

.swiper-button-next,
.swiper-button-prev {
  color: #C8AA6E;
  transition: color 0.3s ease;
}

.swiper-button-next:hover,
.swiper-button-prev:hover {
  color: #FFD700;
}

.swiper-pagination-bullet {
  background: #C8AA6E;
  transition: background 0.3s ease;
}

.swiper-pagination-bullet-active {
  background: #FFD700;
}

/* Adjust spacing between rows */
.swiper-slide-transform {
  margin-top: 20px;
}
</style>