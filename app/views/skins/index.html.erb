<div class="lg:max-w-screen-2xl mx-4 lg:mx-32 2xl:mx-auto mb-12 my-8 rounded-lg">
  <div class="grid grid-cols-1">
    <div class="flex flex-col items-center relative mx-4 md:mx-0">
      <div class="mt-8 p-4 max-w-7xl mx-auto bg-gradient-to-r from-[#0A1428]/20 to-[#0A0C14]/20 pt-4 rounded-lg shadow-md border border-slate-900">
        <h3 class="text-3xl font-semibold mb-6 text-center text-[#C8AA6E] border-b pb-4 mx-6 border-[#C8AA6E]/20 cursor-default">Your Skins</h3>
        
<!-- app/views/skins/index.html.erb -->
<div class="flex justify-center mb-4">
  <%= button_to 'Get 5 Random Skins', add_skins_path, method: :get, remote: true, class: "bg-[#C8AA6E] text-[#0A1428] px-6 py-2 rounded-lg hover:bg-opacity-90 transition-all duration-100 ease-in-out" %>
</div>


        <!-- Skins grid container, will be replaced by Turbo Stream -->
        <div id="skins-container" class="grid grid-cols-1 sm:grid-cols-1 lg:grid-cols-1 gap-8 mx-auto lg:mx-24 mt-4">
<!-- app/views/skins/index.html.erb -->
<%= render 'skins/skins_grid', skins: @skins %>
        </div>
      </div>
    </div>
  </div>
</div>


<script>
document.addEventListener('turbo:load', function () {
  // Add click event listeners to all images with data attributes
  document.querySelectorAll('[data-skin-splash]').forEach(img => {
    img.addEventListener('click', function () {
      const splashArt = this.getAttribute('data-skin-splash');
      const skinName = this.getAttribute('data-skin-name');
      const skinDescription = this.getAttribute('data-skin-description');
      const rarity = this.getAttribute('data-skin-rarity'); // Get the rarity
      const modal = document.getElementById('splash-art-modal');
      const splashImage = document.getElementById('splash-art-image');
      const modalSkinName = document.getElementById('modal-skin-name');
      const modalSkinDescription = document.getElementById('modal-skin-description');
      const modalBg = document.getElementById('splash-art-modal-bg');

      // Remove existing rarity classes for background and border
      modalBg.classList.remove(
        'bg-mythic', 'bg-ultimate', 'bg-legendary', 'bg-transcendent', 'bg-common', 'bg-epic',
        'border-mythic', 'border-ultimate', 'border-legendary', 'border-transcendent', 'border-common', 'border-epic'
      );

      // Add the new rarity classes based on the skin's rarity
      if (rarity) {
        modalBg.classList.add(`bg-${rarity.toLowerCase()}`);
        modalBg.classList.add(`border-${rarity.toLowerCase()}`);
      }

      // Update modal content
      splashImage.src = splashArt;
      modalSkinName.textContent = skinName;
      modalSkinDescription.innerHTML = skinDescription || 'No description available.';
      modal.classList.remove('hidden');
    });
  });

  // Add click listener to the modal for closing
  document.getElementById('splash-art-modal').addEventListener('click', function (e) {
    if (e.target === this) {
      this.classList.add('hidden');
    }
  });
});
</script>